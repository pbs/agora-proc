# -*- mode: ruby -*-
# vi: set ft=ruby :
# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "PBS-CentOS_6.4_x86_64"
  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "http://pbsadmin.s3.amazonaws.com/vagrant_boxes/PBS-CentOS-6.4-x86_64-v20130924.box"

  # Network settings
  config.vm.hostname = "pbs-CentOS-6.4-x86-64.dev"
  config.vm.network :forwarded_port, guest: 80, host: 8008, auto_correct: true

  # If true, then any SSH connections made will enable agent forwarding.
  config.ssh.forward_agent = true

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # We assume the VagrantFile is located in the 'dev' subdirectory from the
  # project home:
  #   /project/
  #   /dev
  #   VagrantFile
  #   /setup.py
  #   ...etc...
  #
  config.vm.synced_folder "../", "/vagrant"

  # Provisioning
  # Here we run the vagrant provision script
  config.vm.provision "shell" do |s|
    s.path = "vagrant-provision.sh"
  end
  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  config.vm.provider :virtualbox do |v|
    v.customize ["modifyvm", :id, "--memory", 512]
    # v.gui = true
  end
end
